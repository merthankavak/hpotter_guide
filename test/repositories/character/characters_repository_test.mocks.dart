// Mocks generated by Mockito 5.3.2 from annotations
// in hpotter_guide/test/repositories_test/character/characters_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:hpotter_guide/src/core/init/network/dio_client.dart' as _i2;
import 'package:hpotter_guide/src/features/characters/data/datasources/local_characters_datasource.dart'
    as _i6;
import 'package:hpotter_guide/src/features/characters/data/datasources/remote_characters_datasource.dart'
    as _i4;
import 'package:hpotter_guide/src/shared/domain/entities/character/character.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDioClient_0 extends _i1.SmartFake implements _i2.DioClient {
  _FakeDioClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$CharacterCopyWith_1<$Res> extends _i1.SmartFake
    implements _i3.$CharacterCopyWith<$Res> {
  _Fake$CharacterCopyWith_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteCharactersDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteCharactersDataSourceImpl extends _i1.Mock
    implements _i4.RemoteCharactersDataSourceImpl {
  @override
  _i2.DioClient get dioClient => (super.noSuchMethod(
        Invocation.getter(#dioClient),
        returnValue: _FakeDioClient_0(
          this,
          Invocation.getter(#dioClient),
        ),
        returnValueForMissingStub: _FakeDioClient_0(
          this,
          Invocation.getter(#dioClient),
        ),
      ) as _i2.DioClient);
  @override
  _i5.Future<List<_i3.Character>> fetchAllCharacters() => (super.noSuchMethod(
        Invocation.method(
          #fetchAllCharacters,
          [],
        ),
        returnValue: _i5.Future<List<_i3.Character>>.value(<_i3.Character>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i3.Character>>.value(<_i3.Character>[]),
      ) as _i5.Future<List<_i3.Character>>);
  @override
  _i5.Future<List<_i3.Character>> searchCharacter(String? characterName) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchCharacter,
          [characterName],
        ),
        returnValue: _i5.Future<List<_i3.Character>>.value(<_i3.Character>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i3.Character>>.value(<_i3.Character>[]),
      ) as _i5.Future<List<_i3.Character>>);
}

/// A class which mocks [LocalCharactersDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalCharactersDataSourceImpl extends _i1.Mock
    implements _i6.LocalCharactersDataSourceImpl {
  @override
  String get boxName => (super.noSuchMethod(
        Invocation.getter(#boxName),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set boxName(String? _boxName) => super.noSuchMethod(
        Invocation.setter(
          #boxName,
          _boxName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> addCharacter(_i3.Character? character) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCharacter,
          [character],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<List<_i3.Character>> fetchAllCharacters() => (super.noSuchMethod(
        Invocation.method(
          #fetchAllCharacters,
          [],
        ),
        returnValue: _i5.Future<List<_i3.Character>>.value(<_i3.Character>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i3.Character>>.value(<_i3.Character>[]),
      ) as _i5.Future<List<_i3.Character>>);
  @override
  _i5.Future<List<_i3.Character>> searchCharacter(String? characterName) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchCharacter,
          [characterName],
        ),
        returnValue: _i5.Future<List<_i3.Character>>.value(<_i3.Character>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i3.Character>>.value(<_i3.Character>[]),
      ) as _i5.Future<List<_i3.Character>>);
}

/// A class which mocks [Character].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacter extends _i1.Mock implements _i3.Character {
  @override
  _i3.$CharacterCopyWith<_i3.Character> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$CharacterCopyWith_1<_i3.Character>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub: _Fake$CharacterCopyWith_1<_i3.Character>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i3.$CharacterCopyWith<_i3.Character>);
}
